<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pepper.firstspringboot.dao.IOSReleaseInfoDAO">
  <resultMap id="BaseResultMap" type="com.pepper.firstspringboot.entity.IOSReleaseInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ipa_name" jdbcType="VARCHAR" property="ipaName" />
    <result column="bundle_version" jdbcType="VARCHAR" property="bundleVersion" />
    <result column="dsym_path" jdbcType="VARCHAR" property="dsymPath" />
    <result column="build_version" jdbcType="VARCHAR" property="buildVersion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ipa_name, bundle_version, dsym_path, build_version
  </sql>
  <select id="selectByExample" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ios_release_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ios_release_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ios_release_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfoExample">
    delete from ios_release_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfo" useGeneratedKeys="true">
    insert into ios_release_info (ipa_name, bundle_version, dsym_path, 
      build_version)
    values (#{ipaName,jdbcType=VARCHAR}, #{bundleVersion,jdbcType=VARCHAR}, #{dsymPath,jdbcType=VARCHAR}, 
      #{buildVersion,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfo" useGeneratedKeys="true">
    insert into ios_release_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ipaName != null">
        ipa_name,
      </if>
      <if test="bundleVersion != null">
        bundle_version,
      </if>
      <if test="dsymPath != null">
        dsym_path,
      </if>
      <if test="buildVersion != null">
        build_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ipaName != null">
        #{ipaName,jdbcType=VARCHAR},
      </if>
      <if test="bundleVersion != null">
        #{bundleVersion,jdbcType=VARCHAR},
      </if>
      <if test="dsymPath != null">
        #{dsymPath,jdbcType=VARCHAR},
      </if>
      <if test="buildVersion != null">
        #{buildVersion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfoExample" resultType="java.lang.Long">
    select count(*) from ios_release_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ios_release_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ipaName != null">
        ipa_name = #{record.ipaName,jdbcType=VARCHAR},
      </if>
      <if test="record.bundleVersion != null">
        bundle_version = #{record.bundleVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.dsymPath != null">
        dsym_path = #{record.dsymPath,jdbcType=VARCHAR},
      </if>
      <if test="record.buildVersion != null">
        build_version = #{record.buildVersion,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ios_release_info
    set id = #{record.id,jdbcType=INTEGER},
      ipa_name = #{record.ipaName,jdbcType=VARCHAR},
      bundle_version = #{record.bundleVersion,jdbcType=VARCHAR},
      dsym_path = #{record.dsymPath,jdbcType=VARCHAR},
      build_version = #{record.buildVersion,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfo">
    update ios_release_info
    <set>
      <if test="ipaName != null">
        ipa_name = #{ipaName,jdbcType=VARCHAR},
      </if>
      <if test="bundleVersion != null">
        bundle_version = #{bundleVersion,jdbcType=VARCHAR},
      </if>
      <if test="dsymPath != null">
        dsym_path = #{dsymPath,jdbcType=VARCHAR},
      </if>
      <if test="buildVersion != null">
        build_version = #{buildVersion,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pepper.firstspringboot.entity.IOSReleaseInfo">
    update ios_release_info
    set ipa_name = #{ipaName,jdbcType=VARCHAR},
      bundle_version = #{bundleVersion,jdbcType=VARCHAR},
      dsym_path = #{dsymPath,jdbcType=VARCHAR},
      build_version = #{buildVersion,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>